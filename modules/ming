<?php
/*. DOC   Ming functions for Flash

This module is mostly incomplete.
This module now available from PECL.
<p>

See: <a href="http://www.php.net/manual/en/ref.ming.php"><code>http://www.php.net/manual/en/ref.ming.php</code></a>

.*/


/*. void .*/ function ming_setcubicthreshold(/*. int .*/ $threshold){}
/*. void .*/ function ming_setscale(/*. int .*/ $scale){}
/*. void .*/ function ming_useswfversion(/*. int .*/ $version){}
/*. void .*/ function ming_useconstants(/*. int .*/ $use_){}
/*. int .*/ function ming_keypress(/*. string .*/ $str){}

/* FIXME: still missing:
void ming_setcubicthreshold (int threshold)
void ming_setscale(int scale)
void ming_useswfversion(int version)
void ming_useconstants(int use)
object swfaction::__construct(string)
class swfbitmap::__construct(mixed file [, mixed maskfile])
float swfbitmap::getWidth()
float swfbitmap::getHeight()
object swfbutton::__construct()
void swfbutton::setHit(object SWFCharacter)
void swfbutton::setOver(object SWFCharacter)
void swfbutton::setUp(object SWFCharacter)
void swfbutton::setDown(object SWFCharacter)
void swfbutton::addShape(object SWFCharacter, int flags)
void swfbutton::setMenu(int flag)
void swfbutton::setAction(object SWFAction)
SWFSoundInstance swfbutton::addASound(SWFSound sound, int flags)
void swfbutton::addAction(object SWFAction, int flags)
int ming_keypress(string str)
void swfdisplayitem::moveTo(int x, int y)
void swfdisplayitem::move(float dx, float dy)
void swfdisplayitem::scaleTo(float xScale [, float yScale])
void swfdisplayitem::scale(float xScale, float yScale)
void swfdisplayitem::rotateTo(float degrees)
void swfdisplayitem::rotate(float degrees)
void swfdisplayitem::skewXTo(float xSkew)
void swfdisplayitem::skewX(float xSkew)
void swfdisplayitem::skewYTo(float ySkew)
void swfdisplayitem::skewY(float ySkew)
void swfdisplayitem::setMatrix(float a, float b, float c, float d, float x, float y)
void swfdisplayitem::setDepth(int depth)
void swfdisplayitem::setRatio(float ratio)
void swfdisplayitem::addColor(int r, int g, int b [, int a])
void swfdisplayitem::multColor(float r, float g, float b [, float a])
void swfdisplayitem::setName(string name)
void swfdisplayitem::addAction(object SWFAction, int flags)
void swfdisplayitem::setMaskLevel(int level)
void swfdisplayitem::endMask()
class swffill::__construct()
void swffill::moveTo(float x, float y)
void swffill::scaleTo(float xScale [, float yScale])
void swffill::rotateTo(float degrees)
void swffill::skewXTo(float xSkew)
void swffill::skewYTo(float ySkew)
void swffontcha::raddChars(string)
void swffontchar::addChars(string)
object swffont::__construct(string filename)
float swffont::getWidth(string str)
int swffont::getUTF8Width(string)
int swffont::getWideWidth(string)
float swffont::getAscent()
float swffont::getDescent()
float swffont::getLeading()
void swffont::addChars(string)
string swffont::getShape(code)
class swfgradient::__construct()
void swfgradient::addEntry(float ratio, int r, int g, int b [, int a])
object swfmorph::__construct()
object swfmorph::getShape1()
object swfmorph::getShape2()
class swfsound::__construct(string filename, int flags)
object swfmovie::__construct(int version) 
void swfmovie::nextframe()  
void swfmovie::labelframe(string label)
object swfmovie::add(object SWFBlock) 
void swfmovie::labelframe(object SWFBlock)
int swfmovie::output([int compression])
int swfmovie::saveToFile(stream x [, int compression])
int swfmovie::save(mixed where [, int compression])
void swfmovie::setBackground(int r, int g, int b)
void swfmovie::setRate(float rate)
void swfmovie::setDimension(float x, float y)
void swfmovie::setFrames(int frames)
void swfmovie::streamMP3(mixed file)
object swfshape::__construct()
void swfshape::setline(int width, int r, int g, int b [, int a])
object swfshape::addfill(mixed arg1, int arg2, [int b [, int a]])
void swfshape::setleftfill(int arg1 [, int g ,int b [,int a]])
void swfshape::setleftfill(int arg1 [, int g ,int b [,int a]])
void swfshape::movepento(float x, float y)
void swfshape::movepen(float x, float y)
void swfshape::drawlineto(float x, float y)
void swfshape::drawline(float dx, float dy)
void swfshape::drawcurveto(float ax, float ay, float bx, float by [, float dx, float dy])
void swfshape::drawcurve(float adx, float ady, float bdx, float bdy [, float cdx, float cdy])
void swfshape::drawglyph(SWFFont font, string character [, int size])
void swfshape::drawcircle(float r)
void swfshape::drawarc(float r, float startAngle, float endAngle)
void swfshape::drawcubic(float bx, float by, float cx, float cy, float dx, float dy)
void swfshape::drawcubic(float bx, float by, float cx, float cy, float dx, float dy)
class swfsprite::__construct()
object swfsprite::add(object SWFCharacter)
void swfsprite::remove(object SWFDisplayItem)
void swfsprite::nextFrame()
void swfsprite::labelFrame(string label)
void swfsprite::setFrames(int frames)
class swftext::__construct()
void swftext::setFont(object font)
void swftext::setHeight(float height)
void swftext::setSpacing(float spacing)
void swftext::setColor(int r, int g, int b [, int a])
void swftext::moveTo(float x, float y)
void swftext::addString(string text)
void swftext::addUTF8String(string text)
void swftext::addWideString(string text)
float swftext::getWidth(string str)
double swftext::getUTF8Width(string)
double swftext::getWideWidth(string)
float swftext::getAscent()
float swftext::getDescent()
float swftext::getLeading()
object swftextfield::__construct([int flags])
void swftextfield::setFont(object font)
void swftextfield::setBounds(float width, float height)
void swftextfield::align(int alignment)
void swftextfield::setHeight(float height)
void swftextfield::setLeftMargin(float margin)
void swftextfield::setRightMargin(float margin)
void swftextfield::setMargins(float left, float right)
void swftextfield::setIndentation(float indentation)
void swftextfield::setLineSpacing(float space)
void swftextfield::setColor(int r, int g, int b [, int a])
void swftextfield::setName(string var_name)
void swftextfield::addString(string str)
void swftextfield::setPadding(float padding)
void swftextfield::addChars(string)
*/

?>
